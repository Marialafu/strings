// 1Ô∏è‚É£ Camila est√° revisando nombres en una lista. Si un nombre tiene m√°s de 6 caracteres, debe marcarlo como "Nombre largo". Si tiene 6 o menos, lo marcar√° como "Nombre corto". Crea una funci√≥n que reciba un nombre y determine su clasificaci√≥n.

const knowLengthName = (name) => {
    name.length <= 6 ?  console.log('Nombre corto') : console.log('Nombre largo')
}
knowLengthName('Abby')

// 2Ô∏è‚É£ Bego est√° escribiendo un email, pero quiere asegurarse de que el texto termina en un punto. Crea una funci√≥n que reciba una frase y determine si acaba con "." ("Formato correcto") o no ("Falta el punto final").

const knowIfTextHasDot = (text) => {
    text.endsWith('.') ? console.log('Formato correcto') : console.log('Falta el punto final')
}
knowIfTextHasDot('Hola.adios.')

// 3Ô∏è‚É£ Sabrina est√° verificando contrase√±as. Si la contrase√±a tiene m√°s de 8 caracteres y empieza con un n√∫mero, ser√° v√°lida. Si no cumple estas condiciones, ser√° inv√°lida. Crea una funci√≥n que reciba una contrase√±a y determine si es segura.

const sabrinasPassword = (password) => {
    
    password.length > 8 && string.charAt ? console.log('Contrase√±a v√°lida') : console.log('Contrase√±a incorrecta');
}
sabrinasPassword('Camila')
sabrinasPassword('1Camilas')

// 4Ô∏è‚É£ Macarena est√° revisando la gram√°tica de un texto. Si la primera letra de la frase est√° en may√∫scula y la frase termina con un punto, es correcta. Si no, est√° mal escrita. Crea una funci√≥n que reciba una frase y determine si cumple ambas reglas.



// 5Ô∏è‚É£ Abby encontr√≥ un mensaje pintado en la pared con dos palabras. Si ambas palabras tienen la misma cantidad de letras, lo tomar√° como una pista. Si no, lo ignorar√°. Crea una funci√≥n que reciba dos palabras y determine si el mensaje es importante.

const paintClue = (firstWord, secondWord) => {
    firstWord.length === secondWord.length ? console.log('Es una pista') : console.log('No es una pista');
    
}
paintClue('Camila', 'Cincos')

// 6Ô∏è‚É£ Camila quiere asegurarse de que un n√∫mero de tel√©fono tiene el formato correcto. Debe tener exactamente 9 caracteres. Crea una funci√≥n que reciba un n√∫mero como string y determine si es v√°lido o no.

const correctPhoneNumber = (phoneNumber) => {
    phoneNumber.length === 9 ? console.log('Es v√°lido') : console.log('No es v√°lido');
    ;
}
correctPhoneNumber('123456789')

// 7Ô∏è‚É£ Bego est√° eligiendo un dominio para su nueva web. Si la web termina en ".com", se usar√° para negocios. Si termina en ".org", ser√° para una organizaci√≥n. Si no es ninguno de estos, el dominio no es v√°lido. Crea una funci√≥n que reciba un dominio y determine su clasificaci√≥n.

//if endsWith .com ...

// 8Ô∏è‚É£ Sabrina est√° revisando una lista de palabras. Si una palabra contiene la letra "z", la marcar√° como especial. Si no, ser√° una palabra com√∫n. Crea una funci√≥n que reciba una palabra y determine su categor√≠a.



// 9Ô∏è‚É£ Macarena est√° clasificando documentos seg√∫n su urgencia. Si un mensaje contiene la palabra "urgente" en cualquier parte, lo priorizar√°. Si no, ser√° un mensaje normal. Crea una funci√≥n que reciba un mensaje y determine su nivel de prioridad.

// üîü Abby encontr√≥ una nota con un c√≥digo en una casa abandonada. Si el c√≥digo es un n√∫mero par y tiene exactamente 4 d√≠gitos, puede ser la combinaci√≥n de una caja fuerte. Si es impar o tiene otra longitud, lo descartar√°. Crea una funci√≥n que reciba un c√≥digo y determine si Abby debe investigarlo.

// 1Ô∏è‚É£1Ô∏è‚É£ Camila est√° revisando invitaciones para un evento. Si el nombre del invitado empieza con "A", "E", "I", "O" o "U", se le asignar√° una mesa especial. Si empieza con otra letra, se le asignar√° una mesa normal. Crea una funci√≥n que reciba un nombre y determine su ubicaci√≥n.

// 1Ô∏è‚É£2Ô∏è‚É£ Bego est√° verificando si un texto contiene lenguaje ofensivo. Si un mensaje contiene la palabra "tonto" o "feo", se marcar√° como inapropiado. Si no, ser√° aceptado. Crea una funci√≥n que reciba un mensaje y determine su categor√≠a.

// 1Ô∏è‚É£3Ô∏è‚É£ Sabrina quiere imprimir etiquetas con iniciales. Crea una funci√≥n que reciba un nombre y un apellido y devuelva sus iniciales en may√∫sculas, separadas por un punto.

// 1Ô∏è‚É£4Ô∏è‚É£ Macarena est√° dise√±ando una campa√±a publicitaria. Si el t√≠tulo del anuncio tiene m√°s de 20 caracteres, lo reducir√°. Si tiene 20 o menos, lo usar√° tal cual. Crea una funci√≥n que reciba un t√≠tulo y determine si debe ajustarse.

// 1Ô∏è‚É£5Ô∏è‚É£ Abby encontr√≥ una radio funcionando con interferencias. Si la se√±al incluye la palabra "ayuda" o "suministros", significa que alguien est√° pidiendo asistencia. Si no contiene estas palabras, lo ignorar√°. Crea una funci√≥n que reciba un mensaje de radio y determine si Abby debe responder.

// 1Ô∏è‚É£6Ô∏è‚É£ Camila quiere asegurarse de que los nombres de usuario no contengan espacios. Si un nombre tiene espacios, ser√° inv√°lido. Si no tiene, ser√° aceptado. Crea una funci√≥n que reciba un nombre de usuario y determine su validez.

// 1Ô∏è‚É£7Ô∏è‚É£ Bego est√° registrando nuevas cuentas de clientes. Si un correo electr√≥nico contiene "@" y ".", ser√° v√°lido. Si no tiene alguno de estos elementos, ser√° inv√°lido. Crea una funci√≥n que reciba un email y determine si es correcto.

// 1Ô∏è‚É£9Ô∏è‚É£ Macarena est√° validando n√∫meros de identificaci√≥n. Si un n√∫mero tiene exactamente 8 caracteres y termina en una letra, ser√° v√°lido. Si no cumple estas condiciones, ser√° inv√°lido. Crea una funci√≥n que reciba un n√∫mero de identificaci√≥n y determine si es correcto.

// 2Ô∏è‚É£0Ô∏è‚É£ Abby encontr√≥ una combinaci√≥n de caja fuerte que parece ser un n√∫mero de 4 d√≠gitos. Quiere probar combinaciones aleatorias hasta encontrar una que termine en 7. Crea una funci√≥n que genere un n√∫mero de 4 d√≠gitos que termine en 7.

// 2Ô∏è‚É£1Ô∏è‚É£ Macarena est√° seleccionando un color al azar para una promoci√≥n. Los colores posibles son "Rojo", "Azul", "Verde" y "Amarillo". Crea una funci√≥n que devuelva uno de estos colores de forma aleatoria.

// 2Ô∏è‚É£2Ô∏è‚É£ Sabrina quiere generar una combinaci√≥n de letras para un c√≥digo de producto. La combinaci√≥n debe tener 3 letras aleatorias en may√∫sculas. Crea una funci√≥n que genere y muestre esta combinaci√≥n.

// 2Ô∏è‚É£3Ô∏è‚É£ Bego est√° revisando una lista de verbos para una clase de gram√°tica. Necesita clasificar cada verbo seg√∫n su conjugaci√≥n. Crea una funci√≥n que reciba dos verbos en infinitivo y determine si pertenecen a la primera ("-ar"), segunda ("-er") o tercera ("-ir") conjugaci√≥n. La funci√≥n deber√° imprimir la clasificaci√≥n de cada verbo.

// 2Ô∏è‚É£4Ô∏è‚É£ Abby encontr√≥ una caja cerrada con un c√≥digo de 5 n√∫meros. Solo uno de cada 5 intentos abrir√° la caja. Crea una funci√≥n que simule 5 intentos y muestre si en alguno se abre la caja o no.

// 2Ô∏è‚É£5Ô∏è‚É£ Camila quiere generar una clave secreta para una nueva cuenta. La clave debe tener un n√∫mero aleatorio entre 100 y 999 y una letra aleatoria entre "A" y "Z". Crea una funci√≥n que genere una clave con ese formato.

// 2Ô∏è‚É£6Ô∏è‚É£ Macarena quiere jugar al Euromillones, pero como nunca le toca, ha decidido confiar en el destino. Quiere generar 5 n√∫meros aleatorios entre 1 y 50, asegur√°ndose de que si un n√∫mero es menor que 10, aparezca con un "0" delante. Por ejemplo, un posible resultado ser√≠a: "08 10 33 35 49". Crea una funci√≥n que genere y muestre esta combinaci√≥n de n√∫meros en el formato correcto.

// 2Ô∏è‚É£7Ô∏è‚É£ Sabrina necesita ocultar parte de un n√∫mero de tarjeta de cr√©dito. Dado un n√∫mero de 16 d√≠gitos como string, la funci√≥n debe reemplazar todos los caracteres excepto los √∫ltimos 4 con asteriscos. Por ejemplo, "1234567812345678" debe mostrarse como **********5678.

// 2Ô∏è‚É£8Ô∏è‚É£ Camila quiere dividir frases largas en dos partes. Si una frase tiene m√°s de 20 caracteres, debe dividirla en dos partes: los primeros 10 caracteres y el resto, separados por " - ". Si la frase tiene 20 o menos, se devuelve tal cual. Crea una funci√≥n que realice esta divisi√≥n.

// 2Ô∏è‚É£9Ô∏è‚É£ Sabrina est√° encriptando mensajes secretos. Sabe que todos los mensajes deben tener 4 letras y quiere que cada letra de una palabra se sustituya por la siguiente en el abecedario (por ejemplo, "hola" se convertir√≠a en "ipmb"). Si la letra es "z" o "Z", debe convertirse en "a" o "A" respectivamente. Crea una funci√≥n que realice esta transformaci√≥n en una palabra.

// 3Ô∏è‚É£0Ô∏è‚É£ Bego necesita verificar si dos palabras de 4 letras son pal√≠ndromos (es decir, si lee igual de derecha a izquierda y de izquierda a derecha, como "amor" y "roma"). Crea una funci√≥n que determine si dos palabras son pal√≠ndromos.